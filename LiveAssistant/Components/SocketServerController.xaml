<!--
    Copyright (C) 2023  Live Assistant official Windows app Authors

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<UserControl
    x:Class="LiveAssistant.Components.SocketServerController"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:socketServer="using:LiveAssistant.SocketServer"
    mc:Ignorable="d">

    <StackPanel
        Orientation="Horizontal"
        Spacing="12">

        <CheckBox
            x:Uid="SocketServerCheckBox"
            MinWidth="0"
            VerticalAlignment="Center"
            IsChecked="{x:Bind _viewModel.Manager.IsEnabled, Mode=TwoWay}"/>

        <NumberBox
            x:Uid="PortNumberBox"
            Width="80"
            IsEnabled="{x:Bind _viewModel.State, Mode=OneWay, Converter={StaticResource WebServerStateToIsEnabledConverter}}"
            SpinButtonPlacementMode="Compact"
            Value="{x:Bind _viewModel.Port, Mode=TwoWay}"/>

        <DropDownButton
            x:Uid="SocketServerPasswordDropDownButton">

            <DropDownButton.Flyout>
                <MenuFlyout
                    Placement="BottomEdgeAlignedRight">

                    <MenuFlyoutItem
                        x:Uid="SocketServerPasswordMenuCopy"
                        Command="{x:Bind _viewModel.CopyPasswordCommand}"/>

                    <MenuFlyoutItem
                        x:Uid="SocketServerPasswordMenuRegenerate"
                        IsEnabled="{x:Bind _viewModel.State, Mode=OneWay, Converter={StaticResource WebServerStateToIsEnabledConverter}}"
                        Command="{x:Bind _viewModel.RegeneratePasswordCommand}"/>
                </MenuFlyout>
            </DropDownButton.Flyout>
        </DropDownButton>

        <ToggleButton
            VerticalAlignment="Stretch"
            Padding="8 0"
            IsEnabled="{x:Bind _viewModel.Manager.IsConnected, Mode=OneWay, Converter={StaticResource BooleanInverseConverter}}"
            IsChecked="{x:Bind _viewModel.IsTestModeEnabled, Mode=TwoWay}">

            <ToolTipService.ToolTip>
                <ToolTip
                    x:Uid="SocketServerTestModeToggleButtonToolTip"/>
            </ToolTipService.ToolTip>

            <FontIcon
                VerticalAlignment="Center"
                Glyph="{StaticResource IconRobot}"/>
        </ToggleButton>

        <Button
            VerticalAlignment="Stretch"
            IsEnabled="{x:Bind _viewModel.IsClientsEmpty, Mode=OneWay, Converter={StaticResource BooleanInverseConverter}}">

            <StackPanel
                Orientation="Horizontal">

                <TextBlock
                    x:Uid="SocketServerClientsDropDownButton"/>

                <InfoBadge
                    VerticalAlignment="Center"
                    Margin="8 0 0 0"
                    Visibility="{x:Bind _viewModel.IsClientsEmpty, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInverseConverter}}"
                    Value="{x:Bind _viewModel.Clients.Count, Mode=OneWay}"/>
            </StackPanel>

            <Button.Flyout>
                <Flyout>
                    <ListView
                        Visibility="{x:Bind _viewModel.IsClientsEmpty, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInverseConverter}}"
                        SelectionMode="None"
                        HorizontalContentAlignment="Stretch"
                        ItemsSource="{x:Bind _viewModel.Clients, Mode=OneWay}">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0 6"/>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemTemplate>
                            <DataTemplate
                                x:DataType="socketServer:SocketClient">

                                <Grid
                                    ColumnSpacing="12">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel
                                        Grid.Column="0"
                                        Orientation="Vertical"
                                        VerticalAlignment="Center"
                                        Spacing="2">

                                        <TextBlock
                                            Style="{ThemeResource BodyTextBlockStyle}"
                                            Foreground="{ThemeResource TextFillColorPrimary}"
                                            Text="{x:Bind Host, Mode=OneWay}"
                                            TextTrimming="CharacterEllipsis"/>

                                        <TextBlock
                                            MaxWidth="256"
                                            Style="{ThemeResource CaptionTextBlockStyle}"
                                            Foreground="{ThemeResource TextFillColorTertiary}"
                                            Text="{x:Bind Types, Mode=OneWay, Converter={StaticResource DataTypesToSingleStringConverter}}"
                                            TextWrapping="WrapWholeWords"/>
                                    </StackPanel>

                                    <Button
                                        Grid.Column="1"
                                        Padding="9"
                                        VerticalAlignment="Center"
                                        BorderThickness="0"
                                        Background="Transparent"
                                        Command="{x:Bind Close, Mode=OneWay}">

                                        <FontIcon
                                            VerticalAlignment="Center"
                                            FontSize="16"
                                            Glyph="{StaticResource IconClose}"/>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Flyout>
            </Button.Flyout>
        </Button>
    </StackPanel>
</UserControl>
